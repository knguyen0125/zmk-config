#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>


#define L_BASE 0
#define L_NAV 1
#define L_MOUSE 2
#define L_BUTTON 3
#define L_MEDIA 4
#define L_NUM 5
#define L_SYM 6
#define L_FN 7

/ {
        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;
                        quick-tap-ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
        };



        keymap {
                compatible = "zmk,keymap";

                base {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  | = |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  | = |  H  |  J   |  K  |  L  |  '  |
// |  Z  |  X  |  C  |  V  |  B  | = |  N  |  M   |  ,  |  .  |  /  |
//             | ESC | SPC | TAB | = | ENT | BSPC | DEL |
                        bindings = <
    &kp Q           &kp W       &kp E            &kp R             &kp T                           &kp Y               &kp U           &kp I           &kp O           &kp P    
    &hm LWIN A      &hm LALT S  &hm LCTRL D      &hm LSHIFT F      &kp G                           &kp H               &hm RSHIFT J    &hm RCTRL K     &hm RALT L      &hm RWIN APOS 
    &lt L_BUTTON Z  &kp X       &kp C            &kp V             &kp B                           &kp N               &kp M           &kp COMMA       &kp DOT         &kp FSLH 
                                &lt L_MEDIA ESC  &lt L_NAV SPACE   &lt L_MOUSE TAB                 &lt L_SYM ENTER     &lt L_NUM BSPC  &lt L_FN DEL
                        >;
                };

                nav {
// -----------------------------------------------------------------------------------------
// |     |     |      |       |    | = |      |       |      |       |       |
// | WIN | ALT | CTRL | SHIFT |    | = | LEFT | DOWN  | UP   | RIGHT |  CAP  |
// |     |     |      |       |    | = | HOME | PGDO  | PGUP | END   | INST  |
//             |      |       |    | = | ENT  | BSPC  | DEL  |
                        bindings = <
    &none       &none       &none           &none           &none                           &none               &none           &none           &none           &none    
    &kp LWIN    &kp LALT    &kp LCTRL       &kp LSHIFT      &none                           &kp LEFT            &kp DOWN        &kp UP          &kp RIGHT       &kp CAPS 
    &none       &none       &none           &none           &none                           &kp HOME            &kp PG_DN       &kp PG_UP       &kp END         &kp INSERT 
                            &none           &trans          &none                           &kp ENTER           &kp BSPC        &kp DEL
                        >;
                };

// Mouse keys are not supported in ZMK, assign it to Nav for now
                mouse {
// -----------------------------------------------------------------------------------------
// |     |     |      |       |    | = |      |       |      |       |       |
// | WIN | ALT | CTRL | SHIFT |    | = | LEFT | DOWN  | UP   | RIGHT |  CAP  |
// |     |     |      |       |    | = | HOME | PGDO  | PGUP | END   | INST  |
//             |      |       |    | = | ENT  | BSPC  | DEL  |
                        bindings = <
    &none       &none       &none           &none           &none                           &none               &none               &none           &none              &none    
    &kp LWIN    &kp LALT    &kp LCTRL       &kp LSHIFT      &none                           &mmv MOVE_LEFT      &mmv MOVE_DOWN      &mmv MOVE_UP    &mmv MOVE_RIGHT    &none
    &none       &none       &none           &none           &none                           &msc SCRL_LEFT      &msc SCRL_DOWN      &msc SCRL_UP    &msc SCRL_RIGHT    &none
                            &none           &none           &trans                          &mkp LCLK           &mkp MCLK           &mkp RCLK
                        >;
                };

// Additional buttons 
                button {
// -----------------------------------------------------------------------------------------
// |     |     |      |       |    | = | BT_NXT |       |      |       | BT_CLR |
// |     |     |      |       |    | = |        |       |      |       |        |
// |     |     |      |       |    | = |        |       |      |       |        |
//             |      |       |    | = |        |       |      |
                        bindings = <
    &none       &none       &none           &none           &none                           &bt BT_NXT          &none           &none           &none           &bt BT_CLR    
    &none       &none       &none           &none           &none                           &out OUT_TOG        &none           &none           &none           &none
    &trans      &none       &none           &none           &none                           &bt BT_SEL 0        &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &none
                            &none           &none           &none                           &none               &none           &none                            
                            >;
                };

                media {
// -----------------------------------------------------------------------------------------
// |     |     |      |       |    | = |        |          |          |        |        |
// | WIN | ALT | CTRL | SHIFT |    | = | C_PREV | C_VOL_DN | C_VOL_UP | C_NEXT |        |
// |     |     |      |       |    | = |        |          |          |        |        |
//             |      |       |    | = | C_STOP | C_PP     | C_MUTE   |
                        bindings = <
    &none       &none       &none           &none           &none                           &none               &none           &none           &none           &none
    &kp LWIN    &kp LALT    &kp LCTRL       &kp LSHIFT      &none                           &kp C_PREV          &kp C_VOL_DN    &kp C_VOL_UP    &kp C_NEXT      &kp CAPS 
    &trans      &none       &none           &none           &none                           &none               &none           &none           &none           &none
                            &trans          &none           &none                           &kp C_STOP          &kp C_PP        &kp C_MUTE                            
                            >;
                };

                num {
// -----------------------------------------------------------------------------------------
// | LBKT  | 7   | 8    | 9     | RBKT   | = |        |          |          |        |        |
// | SEMI  | 4   | 5    | 6     | EQUAL  | = |        | SHIFT    | CTRL     | ALT    | WIN    |
// | GRAVE | 1   | 2    | 3     | BSLH   | = |        |          |          |        |        |
//               | DOT  | 0     | MINUS  | = |        |          |          |
                        bindings = <
    &kp LBKT    &kp N7      &kp N8          &kp N9          &kp RBKT                        &none               &none           &none           &none           &none
    &kp SEMI    &kp N4      &kp N5          &kp N6          &kp EQUAL                       &none               &kp RSHIFT      &kp RCTRL       &kp RALT        &kp RWIN
    &kp GRAVE   &kp N1      &kp N2          &kp N3          &kp BSLH                        &none               &none           &none           &none           &none
                            &kp DOT         &kp N0          &kp MINUS                       &none               &trans          &none
                            >;
                };

                sym {
// -----------------------------------------------------------------------------------------
// | LBRC  | AMPS | 8    | 9     | RBKT   | = |        |          |          |        |        |
// | SEMI  | 4   | 5    | 6     | EQUAL  | = |        | SHIFT    | CTRL     | ALT    | WIN    |
// | GRAVE | 1   | 2    | 3     | BSLH   | = |        |          |          |        |        |
//               | DOT  | 0     | MINUS  | = |        |          |          |
                        bindings = <
    &kp LBRC    &kp AMPS    &kp STAR        &kp LPAR        &kp RBRC                        &none               &none           &none           &none           &none
    &kp COLON   &kp DLLR    &kp PRCNT       &kp CARET       &kp PLUS                        &none               &kp RSHIFT      &kp RCTRL       &kp RALT        &kp RWIN
    &kp TILDE   &kp EXCL    &kp AT          &kp HASH        &kp PIPE                        &none               &none           &none           &none           &none
                            &kp LPAR        &kp RPAR        &kp UNDER                       &trans              &none           &none
                            >;
                };

                fun {
// -----------------------------------------------------------------------------------------
// | F12  | F7   | F8    | F9     | PrtScn   | = |        |          |          |        |        |
// | F11  | F4   | F5    | F6     | ScrLoc   | = |        | SHIFT    | CTRL     | ALT    | WIN    |
// | F10  | F1   | F2    | F3     | PauBrk   | = |        |          |          |        |        |
//               | MENU  | SPACE  | TAB      | = |        |          |          |
                        bindings = <
    &kp F12    &kp F7    &kp F8       &kp F9        &kp PSCRN                         &none               &none           &none           &none           &none
    &kp F11    &kp F4    &kp F5       &kp F6        &kp SLCK                          &none               &kp RSHIFT      &kp RCTRL       &kp RALT        &kp RWIN
    &kp F10    &kp F1    &kp F2       &kp F3        &kp PAUSE_BREAK                   &none               &none           &none           &none           &none
                         &kp C_MENU   &kp SPACE     &kp TAB                           &none               &none           &trans
                            >;
                };
        };
};